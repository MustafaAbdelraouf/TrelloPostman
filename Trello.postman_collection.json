{
	"info": {
		"_postman_id": "6426e0ee-c45c-4c6d-be87-403f40448abc",
		"name": "Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36543598"
	},
	"item": [
		{
			"name": "Create New Workspace",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"pm.environment.set(\"Workspace_ID\", response.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://api.trello.com/1/organizations?displayName=Trello&key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"organizations"
					],
					"query": [
						{
							"key": "displayName",
							"value": "Trello"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get and check the created workspace",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"The workspace created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.displayName).to.eql(\"Trello\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{Base_Url}}/1/organizations/{{Workspace_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"organizations",
						"{{Workspace_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"pm.environment.set(\"Board_ID\", response.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/boards/?name=Trello API Testing&key={{Key}}&token={{Token}}&defaultLists=false",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Trello API Testing"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get and check the created board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The board created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Trello API Testing\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{Base_Url}}/1/boards/{{Board_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"boards",
						"{{Board_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Done List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"pm.environment.set(\"Done_Id\", response.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/lists?name=Done&idBoard={{Board_ID}}&key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "Done"
						},
						{
							"key": "idBoard",
							"value": "{{Board_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get and check the created done list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The list created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Done\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/lists/{{Done_Id}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"lists",
						"{{Done_Id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Execution and Monitoring List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"pm.environment.set(\"Execution and Monitoring_Id\", response.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/lists?name=Execution and Monitoring&idBoard={{Board_ID}}&key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "Execution and Monitoring"
						},
						{
							"key": "idBoard",
							"value": "{{Board_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get and check the created execution list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The list created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Execution and Monitoring\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/lists/{{Execution and Monitoring_Id}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"lists",
						"{{Execution and Monitoring_Id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update the list Monitoring list name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"Monitoring_Id\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/lists/{{Execution and Monitoring_Id}}?key={{Key}}&token={{Token}}&name=Monitoring",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"lists",
						"{{Execution and Monitoring_Id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Monitoring"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get and check the updated execution list to monitoring",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The list created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Monitoring\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/lists/{{Monitoring_Id}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"lists",
						"{{Monitoring_Id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Development list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"pm.environment.set(\"Development_Id\", response.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/lists?name=Development&idBoard={{Board_ID}}&key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "Development"
						},
						{
							"key": "idBoard",
							"value": "{{Board_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get and check the created development list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The list created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Development\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/lists/{{Development_Id}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"lists",
						"{{Development_Id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Design List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let response = pm.response.json();\r",
							"pm.environment.set(\"Design_Id\", response.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "{{Base_Url}}/1/lists?name=Design&idBoard={{Board_ID}}&key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "Design"
						},
						{
							"key": "idBoard",
							"value": "{{Board_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get and check the created design list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"The list created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Design\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/lists/{{Design_Id}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"lists",
						"{{Design_Id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create requirement card in design list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"Requirement_card_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{Base_Url}}/1/cards?idList={{Design_Id}}&key={{Key}}&token={{Token}}&name=Requirement",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{Design_Id}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Requirement"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create test procedure card in design list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"TestProcedure_card_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/cards?idList={{Design_Id}}&key={{Key}}&token={{Token}}&name=Test Procedure",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{Design_Id}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Test Procedure"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Test Scenarios card in design list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"TestScenarios_card_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/cards?idList={{Design_Id}}&key={{Key}}&token={{Token}}&name=Test Scenarios",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{Design_Id}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Test Scenarios"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Test Cases card in development list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"TestCase_card_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/cards?idList={{Development_Id}}&key={{Key}}&token={{Token}}&name=Test Cases",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{Development_Id}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Test Cases"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create bug reports card in execution list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"BugReports_card_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/cards?key={{Key}}&token={{Token}}&name=Bug Reports&idList={{Monitoring_Id}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Bug Reports"
						},
						{
							"key": "idList",
							"value": "{{Monitoring_Id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create manual testing checklist in requirement card ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"ManualTest_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists?idCard={{Requirement_card_ID}}&key={{Key}}&token={{Token}}&name=Manual Testing",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{Requirement_card_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Manual Testing"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create reviewing checklist in requirement card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"Reviewing_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists?idCard={{Requirement_card_ID}}&key={{Key}}&token={{Token}}&name=Reviweing",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{Requirement_card_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Reviweing"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user checklist in test procedure card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"User_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists?idCard={{TestProcedure_card_ID}}&key={{Key}}&token={{Token}}&name=User",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{TestProcedure_card_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "User"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create register checklist in test scenarios card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"Register_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists?idCard={{TestScenarios_card_ID}}&key={{Key}}&token={{Token}}&name=Register",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{TestScenarios_card_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Register"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Sign in checklist in test scenarios card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"SignIn_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists?idCard={{TestScenarios_card_ID}}&key={{Key}}&token={{Token}}&name=Sign In",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{TestScenarios_card_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Sign In"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create log out checklist in test scenarios card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"LogOut_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists?idCard={{TestScenarios_card_ID}}&key={{Key}}&token={{Token}}&name=Log Out",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{TestScenarios_card_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Log Out"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create test case #1 checklist in test case card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"TestCase #1_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists?idCard={{TestCase_card_ID}}&key={{Key}}&token={{Token}}&name=Verify valid username and password",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{TestCase_card_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Verify valid username and password"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create test case #2 checklist in test case card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"TestCase #2_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists?idCard={{TestCase_card_ID}}&key={{Key}}&token={{Token}}&name=Verify invalid username and password",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{TestCase_card_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Verify invalid username and password"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create bug report #1 checklist in monitoring card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"Bug_Report #1_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists?idCard={{BugReports_card_ID}}&key={{Key}}&token={{Token}}&name=Bug %231",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{BugReports_card_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Bug %231"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create bug report #2 checklist in monitoring card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"Bug_Report #2_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists?idCard={{BugReports_card_ID}}&key={{Key}}&token={{Token}}&name=Bug %232",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{BugReports_card_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Bug %232"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create bug report #3 checklist in monitoring card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"Bug_Report #3_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists?idCard={{BugReports_card_ID}}&key={{Key}}&token={{Token}}&name=Bug %233",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{BugReports_card_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Bug %233"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create bug report #4 checklist in monitoring card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"Bug_Report #4_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists?idCard={{BugReports_card_ID}}&key={{Key}}&token={{Token}}&name=Bug %234",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{BugReports_card_ID}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "name",
							"value": "Bug %234"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create username item to register checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"UserName #1_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{Register_ID}}/checkItems?name=Username&key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{Register_ID}}",
						"checkItems"
					],
					"query": [
						{
							"key": "name",
							"value": "Username"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create password item to register checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"Password_#1_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{Register_ID}}/checkItems?name=Password&key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{Register_ID}}",
						"checkItems"
					],
					"query": [
						{
							"key": "name",
							"value": "Password"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create email item to register checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"Email #1_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{Register_ID}}/checkItems?name=Email&key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{Register_ID}}",
						"checkItems"
					],
					"query": [
						{
							"key": "name",
							"value": "Email"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Admin item to register checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"Admin #1_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{User_ID}}/checkItems?name=Admin&key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{User_ID}}",
						"checkItems"
					],
					"query": [
						{
							"key": "name",
							"value": "Admin"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create normal user item to register checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let res = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"normalUser #1_ID\", res.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{User_ID}}/checkItems?name=Normal user&key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{User_ID}}",
						"checkItems"
					],
					"query": [
						{
							"key": "name",
							"value": "Normal user"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete normal user checkItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{User_ID}}/checkItems/{{normalUser #1_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{User_ID}}",
						"checkItems",
						"{{normalUser #1_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete admin checkItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{User_ID}}/checkItems/{{Admin #1_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{User_ID}}",
						"checkItems",
						"{{Admin #1_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Email checkItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{Register_ID}}/checkItems/{{Email #1_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{Register_ID}}",
						"checkItems",
						"{{Email #1_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete password checkItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{Register_ID}}/checkItems/{{Password_#1_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{Register_ID}}",
						"checkItems",
						"{{Password_#1_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user name checkItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{Register_ID}}/checkItems/{{UserName #1_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{Register_ID}}",
						"checkItems",
						"{{UserName #1_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete bug #4 checkIist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{Bug_Report #4_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{Bug_Report #4_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete bug #3 checkIist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{Bug_Report #3_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{Bug_Report #3_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete bug #2 checkIist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{Bug_Report #2_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{Bug_Report #2_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete bug #1 checkIist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{Bug_Report #1_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{Bug_Report #1_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete test case #2 checkIist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{TestCase #2_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{TestCase #2_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete test case #1 checkIist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{TestCase #1_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{TestCase #1_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete logout checkIist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{LogOut_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{LogOut_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete sign in checkIist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{SignIn_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{SignIn_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete register checkIist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{Register_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{Register_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user checkIist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{User_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{User_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete reviewing checkIist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{Reviewing_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{Reviewing_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete manual test checkIist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/checklists/{{ManualTest_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{ManualTest_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete bug reports card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{BugReports_card_ID}}?key={{Key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{BugReports_card_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete test cases card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{TestCase_card_ID}}?key={{Key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{TestCase_card_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete test scenarios card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{TestScenarios_card_ID}}?key={{Key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{TestScenarios_card_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete test procedure card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{TestProcedure_card_ID}}?key={{Key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{TestProcedure_card_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete requirement card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{Requirement_card_ID}}?key={{Key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{Requirement_card_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive done list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Done list archived successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists/{{Done_Id}}/closed?key={{Key}}&token={{Token}}&value=true",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists",
						"{{Done_Id}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "value",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive monitoring list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Monitoring list archived successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists/{{Monitoring_Id}}/closed?key={{Key}}&token={{Token}}&value=true",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists",
						"{{Monitoring_Id}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "value",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive Development list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Development list archived successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists/{{Development_Id}}/closed?key={{Key}}&token={{Token}}&value=true",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists",
						"{{Development_Id}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "value",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive design list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Design list archived successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists/{{Design_Id}}/closed?key={{Key}}&token={{Token}}&value=true",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists",
						"{{Design_Id}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "value",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete my board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData._value).to.eql(null);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_Url}}/1/boards/{{Board_ID}}?key={{Key}}&token={{Token}}",
					"host": [
						"{{Base_Url}}"
					],
					"path": [
						"1",
						"boards",
						"{{Board_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete my workspace",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/organizations/{{Workspace_ID}}?key={{Key}}&token={{Token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"organizations",
						"{{Workspace_ID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		}
	]
}